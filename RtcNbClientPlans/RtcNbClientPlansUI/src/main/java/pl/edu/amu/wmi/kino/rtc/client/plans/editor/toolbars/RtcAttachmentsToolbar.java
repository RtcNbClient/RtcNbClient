/*
 * Copyright (C) 2009-2011 RtcNbClient Team (http://rtcnbclient.wmi.amu.edu.pl/)
 *
 * This file is part of RtcNbClient.
 *
 * RtcNbClient is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * RtcNbClient is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with RtcNbClient. If not, see <http://www.gnu.org/licenses/>.
 */
package pl.edu.amu.wmi.kino.rtc.client.plans.editor.toolbars;

import java.awt.ComponentOrientation;
import java.awt.Point;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import org.openide.util.HelpCtx;
import org.openide.util.actions.SystemAction;
import pl.edu.amu.wmi.kino.rtc.client.plans.actions.RtcAddAttachmentAction;
import pl.edu.amu.wmi.kino.rtc.client.plans.actions.RtcRemoveAttachmentAction;
import pl.edu.amu.wmi.kino.rtc.client.plans.actions.RtcShowAttachmentsTableAction;
import pl.edu.amu.wmi.kino.rtc.client.plans.editor.items.RtcAttachmentPane;
import pl.edu.amu.wmi.kino.rtc.client.plans.editor.items.RtcPageEditingPanel;

/**
 *
 * @author Bartosz Zaleski <b4lzak@gmail.com>
 */
public class RtcAttachmentsToolbar extends javax.swing.JToolBar implements HelpCtx.Provider {

    private static final long serialVersionUID = 37915435235L;

    public RtcAttachmentsToolbar() {
        initComponents();
        this.setComponentOrientation(ComponentOrientation.LEFT_TO_RIGHT);
        this.setFloatable(false);
        addMouseListener(adapter);
        addMouseMotionListener(adapter);
        add(SystemAction.get(RtcShowAttachmentsTableAction.class).getToolbarPresenter());
        add(new Separator());
        add(SystemAction.get(RtcAddAttachmentAction.class).getToolbarPresenter());
        add(SystemAction.get(RtcRemoveAttachmentAction.class).getToolbarPresenter());

    }
    public MouseAdapter adapter = new MouseAdapter() {

        private boolean selected;
        private Point startPos = null;

        @Override
        public void mousePressed(MouseEvent ev) {
            //JOptionPane.showMessageDialog(null, "pipa");

            selected = true;
            startPos = ev.getPoint();
        }

        @Override
        public void mouseReleased(MouseEvent ev) {
            selected = false;
            //((RtcAttachmentPane)ev.getComponent().getParent()).bla();
        }

        @Override
        public void mouseDragged(MouseEvent ev) {
            //startPos = ev.getPoint();
            //JOptionPane.showMessageDialog(null, selected);
            if (selected) {
                int h = ((RtcAttachmentPane) ev.getComponent().getParent()).getHeight();
                int y = (int) (startPos.getY() - ev.getPoint().getY());
                //JOptionPane.showMessageDialog(null, ""+h+" "+ev.getPoint().getY()+" "+startPos.getY());
                ((RtcPageEditingPanel) ev.getComponent().getParent().getParent()).doResizing((double) y / (double) h);
            }
        }
    };

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {

        setBackground(new java.awt.Color(255, 255, 255));
        setBorder(null);
        setRollover(true);
        setMaximumSize(new java.awt.Dimension(2, 30));
        setMinimumSize(new java.awt.Dimension(2, 25));
        setPreferredSize(new java.awt.Dimension(2, 25));
    }// </editor-fold>//GEN-END:initComponents

    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
    /**
     * Gets  help context for this action.
     * @return the help context for this action
     */
    @Override
    public HelpCtx getHelpCtx() {
        return HelpCtx.DEFAULT_HELP;
    }
}
