/*
 * Copyright (C) 2009-2011 RtcNbClient Team (http://rtcnbclient.wmi.amu.edu.pl/)
 *
 * This file is part of RtcNbClient.
 *
 * RtcNbClient is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * RtcNbClient is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with RtcNbClient. If not, see <http://www.gnu.org/licenses/>.
 */
package pl.edu.amu.wmi.kino.rtc.client.plans.editor.api.items;

import org.openide.nodes.Node;
import pl.edu.amu.wmi.kino.rtc.client.api.plans.RtcPlanType;

/**
 * This interface if used for defining new groupings, sort orders and even some of
 * views in planned items page of plan editor.
 * <p>
 * Instances of this interface should be registered in layer.xml in
 * Rtc/Modules/PlansModule/Editor/PlannedItemViews/Sort/ or
 * Rtc/Modules/PlansModule/Editor/PlannedItemViews/Group/ or
 * Rtc/Modules/PlansModule/Editor/PlannedItemViews/Filter/
 * </p><p>
 * It means that in order nodes generated by this factory will be used to sort,
 * group or filter. It is non sense to register one factory in many places (but
 * it is possible) because when some view is opening new node is created by firstly
 * creating new Node with all planned items in tree respecting parent-child relation
 * only. Then for all selected filtering policy new Node is created from previous one.
 * Then grouping is applied. <code>RtcPlannedItemsFilterNodeFactory</code> for
 * currently selected grouping policy created node from previous one. At last
 * sorting policy is applied to previously generated node by creating new FilterNode
 * from it.
 * <br/><br/>
 * Shortly. Defined and selected by user sort, group and filter policies are applied
 * in given order:
 * <ol>
 *  <li>All selected filter policies in order defined in layer.xml</li>
 *  <li>Selected groping policy</li>
 *  <li>Selected sorting policy</li>
 * </ol>
 * <br/>
 * After this procedure, created node is shown to the user in selected view style
 * (e.g. flat, tree).
 * </p>
 *
 * @author Patryk Å»ywica
 */
public interface RtcPlannedItemsFilterNodeFactory {

    String getName();

    boolean isAcceptableFor(RtcPlanType type);

    Node createRootFilterNode(Node plannedItemsRootNode);
}
