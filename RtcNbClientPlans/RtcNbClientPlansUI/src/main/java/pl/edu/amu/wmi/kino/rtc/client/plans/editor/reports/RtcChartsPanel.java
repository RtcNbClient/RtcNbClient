/*
 * Copyright (C) 2009-2011 RtcNbClient Team (http://rtcnbclient.wmi.amu.edu.pl/)
 *
 * This file is part of RtcNbClient.
 *
 * RtcNbClient is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * RtcNbClient is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with RtcNbClient. If not, see <http://www.gnu.org/licenses/>.
 */
package pl.edu.amu.wmi.kino.rtc.client.plans.editor.reports;

import java.awt.Image;
import java.util.concurrent.ExecutionException;
import java.util.logging.Level;
import javax.swing.Icon;
import javax.swing.JList;
import javax.swing.JScrollPane;
import javax.swing.ListSelectionModel;
import javax.swing.SwingWorker;
import org.openide.DialogDisplayer;
import org.openide.NotifyDescriptor;
import org.openide.util.Exceptions;
import org.openide.util.HelpCtx;
import org.openide.util.ImageUtilities;
import pl.edu.amu.wmi.kino.rtc.client.RtcLogger;
import pl.edu.amu.wmi.kino.rtc.client.api.plans.RtcPlan;
import pl.edu.amu.wmi.kino.rtc.client.api.plans.reports.RtcPlanReport;

/**
 *
 * @author Pawel Dolecinski
 */
public class RtcChartsPanel extends javax.swing.JPanel implements HelpCtx.Provider {

	private static final long serialVersionUID = 4909940441062653611L;
	private final RtcPlan plan;

    /** Creates new form RtcChartsPanel */
    public RtcChartsPanel(RtcPlan plan) {
        initComponents();
        this.plan = plan;
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jPanel1 = new javax.swing.JPanel();
        chartName = new javax.swing.JLabel();
        chartImage = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 252, 250));
        setLayout(new javax.swing.BoxLayout(this, javax.swing.BoxLayout.Y_AXIS));

        jScrollPane1.setBackground(new java.awt.Color(254, 252, 250));
        jScrollPane1.setAutoscrolls(true);

        jPanel1.setBackground(new java.awt.Color(254, 254, 254));

        chartName.setFont(new java.awt.Font("DejaVu Sans", 1, 14)); // NOI18N
        chartName.setForeground(new java.awt.Color(102, 102, 102));
        chartName.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        chartName.setText(org.openide.util.NbBundle.getMessage(RtcChartsPanel.class, "RtcChartsPanel.chartName.text_1")); // NOI18N
        chartName.setVerticalAlignment(javax.swing.SwingConstants.TOP);

        chartImage.setForeground(new java.awt.Color(102, 102, 102));
        chartImage.setText(org.openide.util.NbBundle.getMessage(RtcChartsPanel.class, "RtcChartsPanel.chartImage.text_1")); // NOI18N

        jButton1.setText(org.openide.util.NbBundle.getMessage(RtcChartsPanel.class, "RtcChartsPanel.jButton1.text")); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(chartImage, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE)
                        .addGap(188, 188, 188))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(298, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(chartName, javax.swing.GroupLayout.DEFAULT_SIZE, 142, Short.MAX_VALUE)
                        .addGap(246, 246, 246))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(chartName, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(chartImage, javax.swing.GroupLayout.DEFAULT_SIZE, 66, Short.MAX_VALUE)
                .addGap(78, 78, 78)
                .addComponent(jButton1)
                .addGap(94, 94, 94))
        );

        jScrollPane1.setViewportView(jPanel1);

        add(jScrollPane1);
    }// </editor-fold>                        

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        JList reportsList = new JList();
        JScrollPane scroll = new JScrollPane();

        reportsList.setEnabled(true);
        scroll.setViewportView(reportsList);

        reportsList.setSelectionMode(ListSelectionModel.SINGLE_INTERVAL_SELECTION);
        reportsList.setListData(plan.getPlansManager().getPlanReportsList());
        NotifyDescriptor nd = new NotifyDescriptor(scroll, "Select report", NotifyDescriptor.OK_CANCEL_OPTION, NotifyDescriptor.PLAIN_MESSAGE, null, NotifyDescriptor.OK_OPTION);

        if (DialogDisplayer.getDefault().notify(nd) == NotifyDescriptor.OK_OPTION) {
            if (reportsList.getSelectedValue() != null) {
                setReport("", "Loading....", null);
                final RtcPlanReport report = (RtcPlanReport) reportsList.getSelectedValue();
                SwingWorker<Image, Object> worker = new SwingWorker<Image, Object>() {

                    @Override
                    protected Image doInBackground() throws Exception {

                        return report.getChartFor(plan);
                    }

                    @Override
                    protected void done() {
                        try {
                            if (get() != null) {
                                setReport(report.getName(), "", ImageUtilities.image2Icon(get()));
                            } else {
                                setReport("", "No work items were found.", null);
                            }
                        } catch (InterruptedException ex) {
                            //Exceptions.printStackTrace(ex);
                            RtcLogger.getLogger(RtcChartsPanel.class).log(Level.WARNING, ex.getLocalizedMessage(), ex);
                        } catch (ExecutionException ex) {
                            //Exceptions.printStackTrace(ex);
                            RtcLogger.getLogger(RtcChartsPanel.class).log(Level.WARNING, ex.getLocalizedMessage(), ex);
                        }
                    }
                };
                worker.execute();

            }

        }
    }//GEN-LAST:event_jButton1ActionPerformed

    void setReport(String name, String info, Icon chart) {
        chartName.setText(name);
        chartImage.setText(info);
        chartImage.setIcon(chart);
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel chartImage;
    private javax.swing.JLabel chartName;
    private javax.swing.JButton jButton1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables

    /**
     * Gets  help context for this action.
     * @return the help context for this action
     */
    @Override
    public HelpCtx getHelpCtx() {
        return HelpCtx.DEFAULT_HELP;
    }
}
